#class inventory kill
#class inventory open
#nop { items in room
	\e[0;32m(10) \e[0;32mA few credits is lying here.
	\e[0m\e[0;32m(11) \e[0;32mOne miserable credit is lying here.
	\e[0m\e[0;32m\e[0;32mAn ATM machine is here.
	\e[0m\e[0;32m\e[0;32mA large bulletin board covered with classified ads takes up a whole wall.
}

#nop --
#nop Class Definitions
#nop --

#var nukefire/inventory-description {Manages room contents, eventually inventory.}
#var nukefire/inventory-help {
	Currently just captures room contents.
}

#nop --
#nop Modloader Stuff
#nop --

#alias nukefire/inventory-register {
	#if {@isloaded{modloader}} {
		register_module nukefire/inventory
	} {
		fail_module nukefire/inventory unknown reason
	}
}

event_register roomContents update_contents {update_contents %2 {%3}}
event_register roomLook clear_contents {clear_contents}

#action {~^\e[0;32m({(\s?\d+)}) \e[0;32m%3.$} {
	event_raise roomContents %1 {%3}
}

#action {~^\e[0m\e[0;32m({(\s?\d+)}) \e[0;32m%3.$} {
	event_raise roomContents %1 {%3}
}

#action {~^\e[0;32m\e[0;32m%1$} {
	event_raise roomContents 1 {%1}
}

#action {~^\e[0m\e[0;32m\e[0;32m%1$} {
	event_raise roomContents 1 {%1}
}

#alias update_contents {
	#nop %0;
	#format _n_items %p %1;
	#var _tmp_item %2;
	#if {$_n_items > 1} {
		#loop 1 $_n_items _rc {
			#list room_contents add $_tmp_item
		}
	};
	#else {
		#list room_contents add $_tmp_item
	}
	diaLog room got args:%1:%2
}

#alias clear_contents {
	#nop %0;
	#unvar room_contents
}

#alias gg {
	#nop rem $cont_key;
	g %1 $cont_key;
	#nop wear $cont_key
}

#alias pack {
	#nop rem $cont_key;
	put %1 $cont_key;
	#nop wear $cont_key
}

#alias ccs {
	#nop rem $cont_key;
	l i $cont_key;
	#nop wear $cont_key
}

#class inventory close