#nop --
#nop Class Definitions
#nop --

#var nukefire/position-description {Position tracking for Nukefire}
#var nukefire/position-help {
	Since Nukefire doesn't have MSDP_POSITION, we have to\n
	screen scrape for position. May not be accurate in all\n
	situations.
}

#nop --
#nop Modloader Stuff
#nop --

#alias nukefire/position-register {
	#if {@isloaded{modloader}} {
		register_module nukefire/position
	} {
		fail_module nukefire/position unknown reason
	}
}

#nop --
#nop Events
#nop --

event_register {variable MSDP_OPPONENT_NAME} position {opponent_eval {%2} {%3}}
event_register updatePosition position {update_position %2}
event_register {variable position} position {update_msdp_pos %2}
event_register mob_kill position {update_position standing}
event_register {variable MSDP_OPPONENT_HEALTH} opp_eval {opponent_eval {%2} {%3}}
event_register join position {update_position fighting}
event_register player_death position {update_position dead}
event_register eval_combat position {combat_position {%2} {%3}}
event_register flee position {update_position standing}
event_register room_follow position {update_position standing}
event_register no_target position {update_position standing}
event_register enter_world position {update_position standing}

#event {VARIABLE UPDATED position[current]} {
	event_raise {variable position} %1
}

#event {VARIABLE UPDATED MSDP_POSITION} {
	event_raise {variable MSDP_POSITION}
}

#nop --
#nop Actions
#nop --

#action {^You are {standing|sitting|resting|hovering|flying|sleeping|}.$} {
	#var position[current] %1
} 

#action {^You are fighting %1.$} {
	#var position[current] fighting
}

#action {^You go to sleep.} {
	diaLog state Position: sleeping;
	event_raise updatePosition sleeping
}

#action {You go to sleep.$} {
	diaLog state Position: sleeping;
	event_raise updatePosition sleeping
}

#action {^In your dreams, or what?$} {
	event_raise updatePosition sleeping
}

#action {^You awaken, and sit up.$} {
	event_raise updatePosition sitting
}

#action {^You stand up.$} {
	event_raise updatePosition standing
}

#action {^You are already standing.$} {
	event_raise updatePosition standing
}

#action {^You sit down.$} {
	event_raise updatePosition sitting
}

#action {^Maybe you should get to your feet first?$} {
	event_raise updatePosition sitting
}

#action {^You sit down and rest your tired bones.$} {
	event_raise updatePosition resting
}

#action {^You lift off the ground and start hovering.$} {
	event_raise updatePosition hovering
}

#action {^You stop floating around and sit down.$} {
	event_raise updatePosition sitting
}

#action {^You stop floating around and go to sleep.$} {
	event_raise updatePosition sleeping
}

#action {^You float down and put your feet on the ground.$} {
	event_raise updatePosition standing
}

#nop --
#nop Alias
#nop --

#alias opponent_eval {
	diaLog kill oppponent position called;
	#if {"%1"==""} {
		event_raise updatePosition standing
	};
	#else {
		event_raise updatePosition fighting
	}
}

#alias update_position {
	#nop %0;
	#var position[current] %1;
	diaLog kill Position="$MSDP_POSITION"
}

#alias update_msdp_pos {
	#nop %0;
	#format MSDP_POSITION {%n} {%1}
}

#alias combat_position {
	#nop %0;
	#format atkr {%l}  %1;
	#format victim {%l} %2;
	#if {"$atkr" == "you" || "$victim" == "you" || "$atkr" == "your"} {
		update_position fighting
	}
}

#alias {^sl$} {
	#send sleep
}

#alias {^st$} {
	#if {"$position[current]"=="sleeping"} {
		#send wake;
		#send stand
	} {
		#send stand
	}
}