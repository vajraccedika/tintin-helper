#class status kill
#class status open

#nop --
#nop Class Definitions
#nop --

#var nukefire/status-description {Tracks HMV}
#var nukefire/status-help {
	Tracks HMV using scraping and MSDP.
}

#nop --
#nop Modloader Stuff
#nop --

#alias nukefire/status-register {
	#if {@isloaded{modloader}} {
		register_module nukefire/status
	} {
		fail_module nukefire/status unknown reason
	}
}

#nop --
#nop Events
#nop --

event_register prompt 5update_hmv {update_hmv %0}
event_register prompt 9hmv_change_check {hmv_change_check %2 %3}
event_register prompt draw_hmv_bars draw_hmv_bars
event_register {variable MSDP_LEVEL} status generate_character_info
event_register {variable MSDP_EXPERIENCE} status generate_character_info
event_register {variable MSDP_CLASS} status generate_character_info
event_register blinded set_blind {set_blind %2}

#var prompt_regexp {^< [0-9]+H [0-9]+M [0-9]+V\s?(\(news\))?\s?(\(motd\))?\s?(\(\d+\))?\s?>}

#nop --
#nop Actions
#nop --

#action {< %1H %2M %3V%4>} {
	diaLog info Prompt: %0;
	end_room_look
} {7}

#action {^You see nothing but infinite darkness...$} {
	event_raise blinded on
}

#action {^You can't see a damned thing, you're blind!$} {
	event_raise blinded on
}

#action {^You feel a cloak of blindness dissolve.$} {
	event_raise blinded off
}

#action {^Your vision returns!$} {
	event_raise blinded off
}

#alias set_blind {
	#var blinded %1
} {4}

#alias update_hmv {
	#nop %0;
	#var _raw_prompt %0;
	#replace _raw_prompt {prompt } {};
	#format _raw_prompt {%p} {$_raw_prompt};
	#var _raw_prompt @strip_ansi{$_raw_prompt};
	diaLog max update_hmv received"$_raw_prompt";
	#regexp {$_raw_prompt} {{$prompt_regexp}} {
		diaLog max valid prompt;
		diaLog max 1:"%1":2"%2":3:"%3":4"%4":5:"%5";
		#var prompt_h @ansiStrip{%3};
		#var prompt_m @ansiStrip{%4};
		#var prompt_v @ansiStrip{%5};
		#replace prompt_h {H} {};
		#replace prompt_m {M} {};
		#replace prompt_v {V} {};
		#var hmv[current][hit] $prompt_h;
		#var MSDP_HEALTH $prompt_h;
		#var MSDP_MANA $prompt_m;
		#var MSDP_MOVEMENT $prompt_v;
		#var hmv[current][mana] $prompt_m;
		#var hmv[current][move] $prompt_v
	}
}

#alias hmv_change_check {
	#nop %0;
	diaLog info hmv_change_check called;
	#var hmv_delta_line {};
	diaLog info $hmv[old];
	#foreach {hit;mana;move} {_hmv} {
		#var hmv_change[$_hmv] 0;
		#var hmv_delta[$_hmv] {};
		#if {$hmv[current][$_hmv] != $hmv[old][$_hmv]} {
			diaLog info HMV[$_hmv] old not HMV current;
			#math hmv_change[$_hmv] $hmv[current][$_hmv] - $hmv[old][$_hmv];
			#if {$hmv_change[$_hmv] != 0 && $hmv_change[$_hmv] <= $MSDP_HEALTH_MAX} {
				diaLog info Change of $hmv_change[$_hmv] for $_hmv;
				diaLog info {Value of hmv_line is "$hmv_delta_line"};
				#format hmv_delta_line {%s%s:%s }
				{$hmv_delta_line}
				{$_hmv}
				{@hmvDelta{$hmv_change[$_hmv]}};
				#var hmv_change[last][$_hmv] @hmvChange{$hmv_change[$_hmv]}
			}
		};
		#var hmv[old][$_hmv] $hmv[current][$_hmv]
	};
	#if {@len{$hmv_delta_line} > 0} {
		diaLog info showing hmv delt;
		#format {hmv_delta_line} {<070>< %s>}
		{$hmv_delta_line};
		#echo $hmv_delta_line
	}
}

#alias draw_hmv_bars {
	#nop %0;
	#math _hitpct @pct{$MSDP_HEALTH;$MSDP_HEALTH_MAX}/100.00;
	#math _manpct @pct{$MSDP_MANA;$MSDP_MANA_MAX}/100.00;
	#math _movpct @pct{$MSDP_MOVEMENT;$MSDP_MOVEMENT_MAX}/100.00;
	#format {_line4} {hit  [%-18s<B373b41>] %-6s\nmana [%-18s<B373b41>] %-6s\nmove [%-18s<B373b41>] %-6s}
	{@display_progress{@clamp{$_hitpct;0;1};ðŸ’— $MSDP_HEALTH/$MSDP_HEALTH_MAX;18;health}}
	{$hmv_change[last][hit]}
	{@display_progress{@clamp{$_manpct;0;1};ðŸ”® $MSDP_MANA/$MSDP_MANA_MAX;18;mana}}
	{$hmv_change[last][mana]}
	{@display_progress{@clamp{$_movpct;0;1};ðŸš˜ $MSDP_MOVEMENT/$MSDP_MOVEMENT_MAX;18;stam}}
	{$hmv_change[last][move]};
	#draw <B373b41> tile -4 $left_panel+1 -2 $map_left-2 $_line4
}

#alias generate_character_info {
	#nop %0;
	#list character_info clear;
	#format {_char1} {%s} {<Ff0d5a1>Character info:};
	#format {_char2} {<Ff0d5a1>Name: <Ffff>%s} {$MSDP_CHARACTER_NAME};
	#format {_char3} {<Ff0d5a1>Class: <Ffff>%.3s <Ff0d5a1>Level: <Ffff>%.2s}
	{$MSDP_CLASS}
	{$MSDP_LEVEL};
	#list character_info create {${_char1}} {${_char2}} {${_char3}};

	#if @is_alias{display_left_info} {display_left_info 1}
}

#alias init_char_info {
	#nop set_left_tile 1 <B5f819d> character_info 3 tile;
	#nop bottom border line;
	#nop set_left_show status <B5f819d> character_info 1;
	set_left_info 1 <B5f819d> character_info 3;
	generate_character_info
}

init_char_info

#function returnHMV {
	#var _h @ansiStrip{%1};
	#var _m @ansiStrip{%2};
	#var _v @ansiStrip{%3};
	#replace _h {H} {};
	#replace _m {M} {};
	#replace _v {V} {};
	#return {h;m;v}
}

#class status close