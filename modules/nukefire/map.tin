#class map kill
#class map open

#nop --
#nop Class Definitions
#nop --

#var nukefire/map-description {Nukefire location manager.}
#var nukefire/map-help {
	Nukefire doesn't support MSDP_ROOM_VNUMS or MSDP_ROOM_EXITS\n
	so at this time the map module is limited to attempting to\n
	know your location and provide information to the HUD.
}

#nop --
#nop Modloader Stuff
#nop --

#alias nukefire/map-register {
	#if {@isloaded{modloader}} {
		register_module nukefire/map
	} {
		fail_module nukefire/map unknown reason
	}
}

#nop -- oneday if we have msdp room info
#nop {
	#map create 100000;
	#map flag nofollow;
	#map flag vtmap on;
	#map flag static;
	#map flag blockgraphics on}

#nop --
#nop Events
#nop --

event_register roomLook map {get_room_info {%2} {%3} {%4}}
event_register prompt map_end_room_look {end_room_look}
event_register prompt map {end_exits}
event_register updateExits map {clear_exits}
event_register endRoomLook room_clear {do_room_clear}
event_register endRoomLook room_hash {do_room_hash}
event_register endRoomLook generate_room_info {generate_room_info}
event_register recall map {verify_room}
event_register {variable MSDP_ROOM_VNUM} msdp_room {disp_msdp_room}
event_register cap_line map {cap_room %2}
event_register peace_room map {add_peaceroom %2}
#nop event_register mapEnterRoom map {map_room}

#nop -- This is a bad room that doesn't trigger room entry
#nop {
	\e[0m\e[22;38;5;118ml\r\n
	\e[0m
	\e[0;36mCenter Road, East - \e[0;36m[daybreak] [Smooth]\e[0m\e[0m}

#nop --
#nop Actions
#nop --

#nop {\e[0m1352\e[0mH \e[0;33m900\e[0mM \e[0;32m838\e[0mV > \e[0;36mThe Temple Ruins\e[0m}

#nop commented out, we have GA now so we don't have this situation
#nop #action {~> \e[0;36m%1 - \e[0;36m[%2] [%3]\e[0m\e[0m} {
	event_raise roomLook {%1} {%2} {%3};
	diaLog map Looking at room
} {4}

#action {~^\e[0;36m%1 - \e[0;36m[%2] [%3]\e[0m\e[0m} {
	event_raise roomLook {%1} {%2} {%3};
	diaLog map Looking at room
}

#nop -- keep this from appearing in our room data
#action {%1 disappears.$} {
	#nop
}
#nop -- keep this from appearing in our room data
#action {%1 appears in the middle of the room.$} {
	#nop 
}

#action {~^\e[0;34m%1\e[0m} {
	#nop
}

#action {^{.*}$} {
	event_raise cap_line {%0}
} {9}

#action {Obvious exits:$} {
	diaLog map update exits;
	event_raise updateExits;
	#nop #unvar exits;
	#var update_exits 1
}

#action {^{North|East|South|West|Up|Down}%s- %2} {
	#if {$update_exits==1} {
		#var room[exits][%1] %2;
		diaLog map setting exit %1 to %2;
	}
} {4}

#action {^This room just has such a peaceful, easy feeling...$} {
	event_raise peaceroom $new_room_hash
}

#action {^With a chant lost to the eons, you transcend space and time, fading into the void!$} {
	event_raise recall
} {4}

#action {^Whispers of forgotten aeons echo, 'We return you return to your celestial sanctuary.'} {
	#nop
} {4}

#action {^With a chant lost to the eons, you transcend space and time, fading into the void!$} {
	event_raise recall
} {4}

#action {^Whispers of forgotten aeons echo, 'We return you return to your celestial sanctuary.'} {
	#nop
} {4}

#action {^You recite a recall scroll which dissolves.$} {
	event_raise recall
}

#action {Denul utters the words, 'iegru ay ogqiso'.$} {
	event_raise recall
}

#action {^You recite a recall scroll which dissolves.$} {
	diaLog map Recall event called;
	event_raise recall
} {4}

#action {*Click*$} {
	event_raise unlock_success
}

#action {This room just has such a peaceful, easy feeling...$} {
	event_raise peace_room $new_room_hash
}

#nop -- Skateboard echoes that muck up room data
#action {^%1 {ollie|ollies} in on %2, sick moves!$} {
	#nop
}

#action {^%1 {skate|skates} in on %2, rad!!!$} {
	#nop
}

#action {^%1 {kickflip|kickflips} on %2, rad entrance!} {
	#nop
}

#action {^%1 {grind|grinds} on %2 epic entrance!$} {
	#nop
}

#action {^%1 {cruise|cruises} in on %2, totally gnarly!} {
	#nop
}

#action {^%1 {slide|slides} in on %2, shredding it!$} {
	#nop
}

#nop --
#nop Aliases
#nop --

#alias disp_msdp_room {
	#nop %0;
}

#alias cap_room {
	#nop %0;
	#if {$room[looking]==1 && "%0" != ""} {
		diaLog map roomcap:"%0";
		#format {room[desc]} {%s%s}
		{$room[desc]}
		{%0}
	}
}

#alias add_peaceroom {
	#if {@is{%1;peace_rooms} == 0} {
		#class rooms assign #list peace_rooms add %1;
		#class rooms write $db/nukefire/rooms.db
	}
}

#nop -- generate formatted line for room info block
#alias generate_room_info {
	#nop %0;
	#var _ex_line {};
	#list exit_info create {<Ff0d5a1>Exits :};
	#foreach {North;East;South;West;Up;Down} {_x} {
		#if {&{room[exits][$_x]}} {
			diaLog map Exit for $_x exists;
			#format _ex_line {<Ff0d5a1>%.1s : <Ffcfcfc>%s}
			{$_x}
			{$room[exits][$_x]};
			#list exit_info add ${_ex_line}
		};
		diaLog map exit line="$_ex_line";
	};

	#list room_info create {<Ff0d5a1>Location info:};

	#format _rname {<Ff0d5a1>Room  : <Ffff>%s} {$room[name]};
	#list room_info add $_rname;
	#format _sector {<Ff0d5a1>Sector: <Ffcfcfc>%s} {$room[sector]};
	#list room_info add ${_sector};
	#if {@is_alias{display_bottom_left_info}} {display_bottom_left_info};
	#nop #if {@is_alias{display_left_tiles}} {display_left_tiles}
}

#nop -- set room info to first left tile
#alias init_room_info {
	#nop set_left_tile 9 <B373b41> _room_line 16 box;
	set_bottom_left_info 1 <B373b41> room_info 3;
	set_bottom_left_info 2 <B373b41> exit_info 7;
	generate_room_info
}

#alias get_room_info {
	#nop %0;
	diaLog map room_info called;
	#var room[name] %1;
	#var room[time] %2;
	#var room[sector] %3;
	#var room[looking] 1;
	#var room[desc] {};
}

#alias end_exits {
	#nop %0;
	#if {$update_exits == 1} {
		#var update_exits 0;
		#nop #var room[exits] $exits;
		event_raise drawExits
	}
}

#alias verify_room {
	#nop %0;
	look
}

#alias clear_exits {
	#nop %0;
	#unvar room[exits];
	diaLog map clearing exits;
}

#nop -- attempt to verify room in case of bad room data
#alias verify_exits {
	#nop %0;
	exits;
	look
}

#alias end_room_look {
	#nop %0;
	#if {$room[looking]==1} {
		event_raise endRoomLook;
		diaLog map endRoomLook
	}
}

#alias do_room_clear {
	#nop %0;
	#var room[looking] 0
}

#alias do_room_hash {
	diaLog map room hash called;
	#nop %0;
	#var room_data $room;
	#unvar room_data[time];
	#unvar room_data[looking];
	#foreach {*room_data[exits][%*]} {_rde} {
		#var room_data[exits][$_rde] {}
	};
	#format new_room_hash {%H} $room_data;
	#if {$new_room_hash == $old_room_hash} {
		diaLog map Looking at same room
	};
	#else {
		diaLog map looking at new room;
		event_raise mapEnterRoom;
		#var old_room_hash $new_room_hash;
	}
}

#nop --
#nop Functions
#nop --

#function shortDir {
	#switch {"%1"} {
		#case {"North"} {#return n};
		#case {"South"} {#return s};
		#case {"East"} {#return e};
		#case {"West"} {#return w};
		#case {"Up"} {#return u};
		#case {"Down"} {#return d}
	}
}

init_room_info

#read $db/nukefire/rooms.db

#nop --
#nop highlights
#nop --
#nop note: #line gag and showme too slow on local

#high {^North -%1$} {Orange}
#high {^East  -%1$} {Magenta}
#high {^South -%1$} {Violet}
#high {^West  -%1$} {Cyan}
#high {^Up    -%1$} {Tan}
#high {^Down  -%1$} {Yellow}

#class map close